{"version":3,"sources":["../src/realtime.js"],"names":["define","PubSub","RealTimeEvents","$","params","requestscounter","pollURL","checkRequestCounter","curDate","Date","curTime","getTime","push","slice","length","publish","CONNECTION_LOST","poll","append","console","log","ajax","XMLHttpRequest","json","onreadystatechange","readyState","status","responseText","JSON","parse","setTimeout","timeout","success","events","i","EVENT","fromid","id","url","encodeURIComponent","userid","token","open","send","init","userId","fromId","pollURLParam"],"mappings":"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","sourcesContent":["/**\n * Real time events\n *\n * @module     realtimeplugin_phppoll/realtime\n * @package    realtimeplugin_phppoll\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub', 'tool_realtime/events', 'jquery'], function(PubSub, RealTimeEvents, $) {\n\n    var params;\n    var requestscounter = [];\n    var pollURL;\n\n    var checkRequestCounter = function() {\n        var curDate = new Date(),\n            curTime = curDate.getTime();\n        requestscounter.push(curTime);\n        requestscounter = requestscounter.slice(-10);\n        // If there were 10 requests in less than 5 seconds, it must be an error. Stop polling.\n        if (requestscounter.length >= 10 && curTime - requestscounter[0] < 5000) {\n            PubSub.publish(RealTimeEvents.CONNECTION_LOST);\n            return false;\n        }\n        return true;\n    };\n\n    var poll = function() {\n        $('#realtimeresults').append(\"Starting to poll<br>\\n\");\n        console.log('Starting to poll');\n        if (!checkRequestCounter()) {\n            // Too many requests, stop polling.\n            return;\n        }\n\n        var ajax = new XMLHttpRequest(),\n            json;\n        ajax.onreadystatechange = function() {\n            $('#realtimeresults').append('== readyState=' + this.readyState + \", status=\" +\n                this.status + \", responsetext=\" + this.responseText + \"<br>\\n\");\n            if (this.readyState === 4 && this.status === 200) {\n                if (this.status === 200) {\n                    try {\n                        json = JSON.parse(this.responseText);\n                    } catch {\n                        setTimeout(poll, params.timeout);\n                        return;\n                    }\n\n                    if (!json.success || json.success !== 1) {\n                        // Poll.php returned an error or an exception. Stop trying to poll.\n                        return;\n                    }\n\n                    // Process results - trigger all necessary Javascript/jQuery events.\n                    var events = json.events;\n                    for (var i in events) {\n                        PubSub.publish(RealTimeEvents.EVENT, events[i]);\n                        // Remember the last id.\n                        params.fromid = events[i].id;\n                    }\n\n                    // And start polling again.\n                    setTimeout(poll, params.timeout);\n                } else {\n                    // Must be a server timeout or loss of network - start new process.\n                    setTimeout(poll, params.timeout);\n                }\n            }\n        };\n        var url = pollURL + '?userid=' + encodeURIComponent(params.userid) +\n            '&token=' + encodeURIComponent(params.token) + '&fromid=' + encodeURIComponent(params.fromid);\n        ajax.open('GET', url, true);\n        ajax.send();\n    };\n\n    return {\n        init: function(userId, token, fromId, pollURLParam, timeout) {\n            if (params && params.userid) {\n                // Already initialised.\n                return;\n            }\n            params = {\n                userid: userId,\n                token: token,\n                fromid: fromId,\n                timeout: timeout,\n            };\n            pollURL = pollURLParam;\n            // Add a little timeout here to trick behat.\n            setTimeout(poll, timeout);\n        }\n    };\n});\n"],"file":"realtime.min.js"}